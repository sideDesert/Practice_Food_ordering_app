{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\L3\\\\Desktop\\\\practice\\\\project\\\\food_order_app\\\\src\\\\Components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkout = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const isEmpty = input => {\n    return input.trim().length === 0;\n  };\n\n  const isFiveCharsOrMore = input => {\n    return input.trim().length >= 5;\n  }; //validity variables\n\n\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  function changeHandler() {\n    let nameIsValid = !isEmpty(nameInputRef.current.value);\n    let streetIsValid = !isEmpty(streetInputRef.current.value);\n    let postalIsValid = isFiveCharsOrMore(postalInputRef.current.value);\n    let cityIsValid = !isEmpty(cityInputRef.current.value);\n    setFormIsValid(nameIsValid && streetIsValid && postalIsValid && cityIsValid);\n  }\n\n  function onCheckoutHandler(event) {\n    let nameIsValid = !isEmpty(nameInputRef.current.value);\n    let streetIsValid = !isEmpty(streetInputRef.current.value);\n    let postalIsValid = isFiveCharsOrMore(postalInputRef.current.value);\n    let cityIsValid = !isEmpty(cityInputRef.current.value);\n\n    if (formIsValid) {\n      props.checkoutHandler({\n        name: nameInputRef.current.value,\n        street: streetInputRef.current.value,\n        postalCode: postalInputRef.current.value,\n        city: cityInputRef.current.value\n      });\n    } else {\n      return;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    class: classes.checkoutForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef,\n        onChange: changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef,\n        onChange: changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef,\n        onChange: changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef,\n        onChange: changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: classes.cancel_btn,\n        onClick: props.cancelHandler,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: onCheckoutHandler,\n        className: !formIsValid && classes.unavailable,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Checkout, \"6v2i6R4/kXFLpP4ZH/rfsKuSCgM=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/L3/Desktop/practice/project/food_order_app/src/Components/Cart/Checkout.js"],"names":["React","useRef","useState","useEffect","classes","Checkout","props","nameInputRef","streetInputRef","postalInputRef","cityInputRef","isEmpty","input","trim","length","isFiveCharsOrMore","formIsValid","setFormIsValid","changeHandler","nameIsValid","current","value","streetIsValid","postalIsValid","cityIsValid","onCheckoutHandler","event","checkoutHandler","name","street","postalCode","city","checkoutForm","control","cancel_btn","cancelHandler","unavailable"],"mappings":"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","sourcesContent":["import React, { useRef }from \"react\"\r\nimport { useState, useEffect } from \"react\";\r\nimport classes from './Checkout.module.css'\r\nconst Checkout = (props)=>{\r\n    const nameInputRef = useRef();\r\n    const streetInputRef = useRef();\r\n    const postalInputRef = useRef();\r\n    const cityInputRef = useRef();\r\n\r\n    const isEmpty = (input)=>{\r\n      return input.trim().length === 0;\r\n    }\r\n    const isFiveCharsOrMore = (input)=>{\r\n      return input.trim().length >= 5;\r\n    }\r\n  \r\n    //validity variables\r\n    \r\n\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n    function changeHandler(){\r\n      \r\n      let nameIsValid = !isEmpty(nameInputRef.current.value);\r\n      let streetIsValid = !isEmpty(streetInputRef.current.value);\r\n      let postalIsValid = isFiveCharsOrMore(postalInputRef.current.value);\r\n      let cityIsValid = !isEmpty(cityInputRef.current.value);\r\n      \r\n      setFormIsValid(nameIsValid&&streetIsValid&&postalIsValid&&cityIsValid);\r\n\r\n    }\r\n    function onCheckoutHandler(event){\r\n      let nameIsValid = !isEmpty(nameInputRef.current.value);\r\n      let streetIsValid = !isEmpty(streetInputRef.current.value);\r\n      let postalIsValid = isFiveCharsOrMore(postalInputRef.current.value);\r\n      let cityIsValid = !isEmpty(cityInputRef.current.value);\r\n\r\n      if (formIsValid) {\r\n        props.checkoutHandler({\r\n          name: nameInputRef.current.value,\r\n          street: streetInputRef.current.value,\r\n          postalCode: postalInputRef.current.value,\r\n          city: cityInputRef.current.value,\r\n        });\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n    return (\r\n      <form class = {classes.checkoutForm}>\r\n        <div className = {classes.control}>\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input type=\"text\" id=\"name\" ref = {nameInputRef} onChange = {changeHandler}/>\r\n        </div>\r\n        <div className = {classes.control}>\r\n          <label htmlFor=\"street\">Street</label>\r\n          <input type=\"text\" id=\"street\" ref = {streetInputRef} onChange = {changeHandler}/>\r\n        </div>\r\n        <div className = {classes.control}>\r\n          <label htmlFor=\"postal\">Postal Code</label>\r\n          <input type=\"text\" id=\"postal\" ref = {postalInputRef} onChange = {changeHandler}/>\r\n        </div>\r\n        <div className = {classes.control}>\r\n          <label htmlFor=\"city\">City</label>\r\n          <input type=\"text\" id=\"city\" ref = {cityInputRef} onChange = {changeHandler}/>\r\n        </div>\r\n        <span>\r\n        <button type = \"button\" className = {classes.cancel_btn} onClick={props.cancelHandler}>Cancel</button>\r\n        <button type = \"submit\" onClick ={onCheckoutHandler} className ={!formIsValid && classes.unavailable}>Confirm</button>\r\n        </span>\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default Checkout"]},"metadata":{},"sourceType":"module"}