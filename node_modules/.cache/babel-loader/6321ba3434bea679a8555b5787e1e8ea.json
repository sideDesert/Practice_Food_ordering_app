{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\L3\\\\Desktop\\\\practice\\\\project\\\\food_order_app\\\\src\\\\Store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./Store\";\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const existingItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingItemIndex];\n    let updatedItem;\n    let updatedItems = [];\n\n    if (existingCartItem) {\n      updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n    } else {\n      updatedItem = { ...action.item\n      };\n      updatedItems = state.items.concat(action.item);\n    }\n\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    let selectedItemIndex = state.items.findIndex(item => item.id === action.id);\n    let selectedItem = state.items[selectedItemIndex];\n    let updatedCartItem = { ...selectedItem\n    };\n    updatedCartItem.amount -= 1;\n    let updatedCartItems = [...state.items];\n    updatedCartItems[selectedItemIndex] = updatedCartItem;\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedCartItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"INCREMENT\") {\n    let updatedItems;\n    let updatedTotalAmount;\n    let existingItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    let existingCartItem = state.items[existingItemIndex];\n    let updatedCartItem = { ...existingCartItem,\n      amount: existingCartItem.amount + 1\n    };\n    updatedItems = [...state.items];\n    updatedItems[existingItemIndex] = updatedCartItem;\n    updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCardAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCardAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCardAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const incrementItemHandler = item => {\n    dispatchCardAction({\n      type: \"INCREMENT\",\n      item: item\n    });\n  };\n\n  let cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n    incrementItem: incrementItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"kAbVUq8bLyhg8vg2AwLDOo2Mj/g=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/L3/Desktop/practice/project/food_order_app/src/Store/CartProvider.js"],"names":["CartContext","React","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","existingItemIndex","findIndex","item","id","existingCartItem","updatedItem","updatedItems","amount","concat","updatedTotalAmount","price","selectedItemIndex","selectedItem","updatedCartItem","updatedCartItems","CartProvider","props","cartState","dispatchCardAction","addItemToCartHandler","removeItemFromCartHandler","incrementItemHandler","cartContext","addItem","removeItem","incrementItem","children"],"mappings":"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","sourcesContent":["import CartContext from \"./Store\"\r\nimport React, { useReducer } from \"react\";\r\n\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n} \r\n\r\nconst cartReducer = (state, action)=>{\r\n    if(action.type === \"ADD\"){\r\n        \r\n\r\n        const existingItemIndex = state.items.findIndex(item=> item.id === action.item.id);\r\n        const existingCartItem = state.items[existingItemIndex];\r\n        let updatedItem;\r\n        let updatedItems = []\r\n\r\n        if(existingCartItem){\r\n            updatedItem = {\r\n              ...existingCartItem,\r\n              amount: existingCartItem.amount + action.item.amount,\r\n            };\r\n            updatedItems = [...state.items];\r\n            updatedItems[existingItemIndex] = updatedItem;\r\n        } else {\r\n            updatedItem = {...action.item};\r\n            updatedItems = state.items.concat(action.item);\r\n        }\r\n        const updatedTotalAmount = state.totalAmount + action.item.price*action.item.amount;\r\n        return{\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        }\r\n    }\r\n    if(action.type === \"REMOVE\"){\r\n        let selectedItemIndex = state.items.findIndex((item)=> item.id === action.id);\r\n        let selectedItem = state.items[selectedItemIndex];\r\n        let updatedCartItem = {...selectedItem};\r\n        updatedCartItem.amount -= 1;\r\n\r\n        let updatedCartItems = [...state.items];\r\n        updatedCartItems[selectedItemIndex] = updatedCartItem;\r\n\r\n        const updatedTotalAmount = state.totalAmount + action.item.price*action.item.amount;\r\n        return{\r\n            items: updatedCartItems,\r\n            totalAmount: updatedTotalAmount\r\n        }\r\n    }\r\n\r\n    if(action.type ===\"INCREMENT\"){\r\n        \r\n        let updatedItems;\r\n        let updatedTotalAmount;\r\n        let existingItemIndex = state.items.findIndex(item=> item.id === action.item.id);\r\n        let existingCartItem = state.items[existingItemIndex];\r\n\r\n        let updatedCartItem = {...existingCartItem, amount: existingCartItem.amount + 1}\r\n        updatedItems = [...state.items];\r\n        updatedItems[existingItemIndex] = updatedCartItem;\r\n        updatedTotalAmount = state.totalAmount + action.item.price*action.item.amount;\r\n\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        }\r\n    }\r\n}\r\n\r\nconst CartProvider = (props)=>{\r\n\r\n    const [cartState, dispatchCardAction] = useReducer(cartReducer, defaultCartState );\r\n\r\n    const addItemToCartHandler = (item)=>{\r\n        dispatchCardAction({type: \"ADD\", item: item});\r\n    }\r\n    const removeItemFromCartHandler = (id)=>{\r\n        dispatchCardAction({type: \"REMOVE\", id: id})\r\n    }\r\n    const incrementItemHandler = (item)=>{\r\n        dispatchCardAction({type: \"INCREMENT\", item: item});\r\n    }\r\n    let cartContext = {\r\n        items :cartState.items,\r\n        totalAmount : cartState.totalAmount,\r\n        addItem : addItemToCartHandler, \r\n        removeItem : removeItemFromCartHandler,\r\n        incrementItem: incrementItemHandler\r\n    }\r\n\r\n    return <CartContext.Provider value = {cartContext}>{props.children}</CartContext.Provider>;\r\n}\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}