{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\L3\\\\Desktop\\\\practice\\\\project\\\\food_order_app\\\\src\\\\Store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./Store\";\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {}\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCardAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCardAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCardAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  let cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"kAbVUq8bLyhg8vg2AwLDOo2Mj/g=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/L3/Desktop/practice/project/food_order_app/src/Store/CartProvider.js"],"names":["CartContext","React","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCardAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,SAAxB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAGA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAiB;AACjC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAAyB;AACrB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAkBN,MAAM,CAACI,IAAP,CAAYG,MAA7E;AACA,WAAM;AACFX,MAAAA,KAAK,EAAEM,YADL;AAEFL,MAAAA,WAAW,EAAEQ;AAFX,KAAN;AAIH;;AACD,MAAGL,MAAM,CAACC,IAAP,KAAgB,QAAnB,EAA4B,CAE3B;AACJ,CAZD;;AAcA,MAAMO,YAAY,GAAIC,KAAD,IAAS;AAAA;;AAE1B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCjB,UAAU,CAACI,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMiB,oBAAoB,GAAIR,IAAD,IAAQ;AACjCO,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAE,KAAP;AAAcG,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMS,yBAAyB,GAAIC,EAAD,IAAM;AACpCH,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAE,QAAP;AAAiBa,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAIA,MAAIC,WAAW,GAAG;AACdnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADH;AAEdC,IAAAA,WAAW,EAAGa,SAAS,CAACb,WAFV;AAGdmB,IAAAA,OAAO,EAAGJ,oBAHI;AAIdK,IAAAA,UAAU,EAAGJ;AAJC,GAAlB;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAIE,WAA/B;AAAA,cAA6CN,KAAK,CAACS;AAAnD;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAnBD;;GAAMV,Y;;KAAAA,Y;AAqBN,eAAeA,YAAf","sourcesContent":["import CartContext from \"./Store\"\r\nimport React, { useReducer } from \"react\";\r\n\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n} \r\nconst cartReducer = (state, action)=>{\r\n    if(action.type === \"ADD\"){\r\n        const updatedItems = state.items.concat(action.item);\r\n        const updatedTotalAmount = state.totalAmount + action.item.price*action.item.amount;\r\n        return{\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        }\r\n    }\r\n    if(action.type === \"REMOVE\"){\r\n\r\n    }\r\n}\r\n\r\nconst CartProvider = (props)=>{\r\n\r\n    const [cartState, dispatchCardAction] = useReducer(cartReducer, defaultCartState );\r\n\r\n    const addItemToCartHandler = (item)=>{\r\n        dispatchCardAction({type: \"ADD\", item: item});\r\n    }\r\n    const removeItemFromCartHandler = (id)=>{\r\n        dispatchCardAction({type: \"REMOVE\", id: id})\r\n    }\r\n\r\n    let cartContext = {\r\n        items :cartState.items,\r\n        totalAmount : cartState.totalAmount,\r\n        addItem : addItemToCartHandler, \r\n        removeItem : removeItemFromCartHandler\r\n    }\r\n\r\n    return <CartContext.Provider value = {cartContext}>{props.children}</CartContext.Provider>;\r\n}\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}